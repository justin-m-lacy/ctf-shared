// automatically generated by the FlatBuffers compiler, do not modify

import { FlagDropped } from '../ctf/flag-dropped';
import { FlagReturned } from '../ctf/flag-returned';
import { FlagTaken } from '../ctf/flag-taken';
import { PlayerCancelFire } from '../ctf/player-cancel-fire';
import { PlayerChargeFire } from '../ctf/player-charge-fire';
import { PlayerFire } from '../ctf/player-fire';
import { PlayerKilled } from '../ctf/player-killed';
import { PlayerMove } from '../ctf/player-move';
import { PlayerRespawn } from '../ctf/player-respawn';
import { TeamScored } from '../ctf/team-scored';
import { TeamWon } from '../ctf/team-won';


export enum MessageContent{
  NONE = 0,
  PlayerMove = 1,
  PlayerChargeFire = 2,
  PlayerFire = 3,
  PlayerCancelFire = 4,
  PlayerKilled = 5,
  PlayerRespawn = 6,
  TeamWon = 7,
  TeamScored = 8,
  FlagTaken = 9,
  FlagDropped = 10,
  FlagReturned = 11
}

export function unionToMessageContent(
  type: MessageContent,
  accessor: (obj:FlagDropped|FlagReturned|FlagTaken|PlayerCancelFire|PlayerChargeFire|PlayerFire|PlayerKilled|PlayerMove|PlayerRespawn|TeamScored|TeamWon) => FlagDropped|FlagReturned|FlagTaken|PlayerCancelFire|PlayerChargeFire|PlayerFire|PlayerKilled|PlayerMove|PlayerRespawn|TeamScored|TeamWon|null
): FlagDropped|FlagReturned|FlagTaken|PlayerCancelFire|PlayerChargeFire|PlayerFire|PlayerKilled|PlayerMove|PlayerRespawn|TeamScored|TeamWon|null {
  switch(MessageContent[type]) {
    case 'NONE': return null; 
    case 'PlayerMove': return accessor(new PlayerMove())! as PlayerMove;
    case 'PlayerChargeFire': return accessor(new PlayerChargeFire())! as PlayerChargeFire;
    case 'PlayerFire': return accessor(new PlayerFire())! as PlayerFire;
    case 'PlayerCancelFire': return accessor(new PlayerCancelFire())! as PlayerCancelFire;
    case 'PlayerKilled': return accessor(new PlayerKilled())! as PlayerKilled;
    case 'PlayerRespawn': return accessor(new PlayerRespawn())! as PlayerRespawn;
    case 'TeamWon': return accessor(new TeamWon())! as TeamWon;
    case 'TeamScored': return accessor(new TeamScored())! as TeamScored;
    case 'FlagTaken': return accessor(new FlagTaken())! as FlagTaken;
    case 'FlagDropped': return accessor(new FlagDropped())! as FlagDropped;
    case 'FlagReturned': return accessor(new FlagReturned())! as FlagReturned;
    default: return null;
  }
}

export function unionListToMessageContent(
  type: MessageContent, 
  accessor: (index: number, obj:FlagDropped|FlagReturned|FlagTaken|PlayerCancelFire|PlayerChargeFire|PlayerFire|PlayerKilled|PlayerMove|PlayerRespawn|TeamScored|TeamWon) => FlagDropped|FlagReturned|FlagTaken|PlayerCancelFire|PlayerChargeFire|PlayerFire|PlayerKilled|PlayerMove|PlayerRespawn|TeamScored|TeamWon|null, 
  index: number
): FlagDropped|FlagReturned|FlagTaken|PlayerCancelFire|PlayerChargeFire|PlayerFire|PlayerKilled|PlayerMove|PlayerRespawn|TeamScored|TeamWon|null {
  switch(MessageContent[type]) {
    case 'NONE': return null; 
    case 'PlayerMove': return accessor(index, new PlayerMove())! as PlayerMove;
    case 'PlayerChargeFire': return accessor(index, new PlayerChargeFire())! as PlayerChargeFire;
    case 'PlayerFire': return accessor(index, new PlayerFire())! as PlayerFire;
    case 'PlayerCancelFire': return accessor(index, new PlayerCancelFire())! as PlayerCancelFire;
    case 'PlayerKilled': return accessor(index, new PlayerKilled())! as PlayerKilled;
    case 'PlayerRespawn': return accessor(index, new PlayerRespawn())! as PlayerRespawn;
    case 'TeamWon': return accessor(index, new TeamWon())! as TeamWon;
    case 'TeamScored': return accessor(index, new TeamScored())! as TeamScored;
    case 'FlagTaken': return accessor(index, new FlagTaken())! as FlagTaken;
    case 'FlagDropped': return accessor(index, new FlagDropped())! as FlagDropped;
    case 'FlagReturned': return accessor(index, new FlagReturned())! as FlagReturned;
    default: return null;
  }
}

